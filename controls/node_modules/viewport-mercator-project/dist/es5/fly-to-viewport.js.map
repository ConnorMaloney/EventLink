{"version":3,"sources":["../../src/fly-to-viewport.js"],"names":["EPSILON","VIEWPORT_TRANSITION_PROPS","flyToViewport","startProps","endProps","t","viewport","rho","startZoom","zoom","startCenter","longitude","latitude","startScale","endZoom","endCenter","scale","startCenterXY","endCenterXY","uDelta","vec2","sub","w0","Math","max","width","height","w1","u1","length","abs","key","startValue","endValue","rho2","b0","b1","r0","log","sqrt","r1","S","s","w","cosh","u","tanh","sinh","scaleIncrement","newZoom","newCenterWorld","add","newCenter"],"mappings":"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","sourcesContent":["import {lerp} from './math-utils';\nimport {\n  scaleToZoom,\n  zoomToScale,\n  lngLatToWorld,\n  worldToLngLat\n} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'];\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n*/\n/* eslint-disable max-statements */\nexport default function flyToViewport(startProps, endProps, t) {\n  // Equations from above paper are referred where needed.\n\n  const viewport = {};\n\n  // TODO: add this as an option for applications.\n  const rho = 1.414;\n\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter, startScale);\n  const endCenterXY = lngLatToWorld(endCenter, startScale);\n  const uDelta = vec2.sub([], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta);\n  // u0 is treated as '0' in Eq (9).\n\n  // If change in center is too small, do linear interpolaiton.\n  if (Math.abs(u1) < EPSILON) {\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    return viewport;\n  }\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * u1 * u1) / (2 * w0 * rho2 * u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * u1 * u1) / (2 * w1 * rho2 * u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n  const s = t * S;\n\n  const w = (Math.cosh(r0) / Math.cosh(r0 + rho * s));\n  const u = w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n  vec2.scale(newCenterWorld, newCenterWorld, scaleIncrement);\n\n  const newCenter = worldToLngLat(\n    newCenterWorld,\n    zoomToScale(newZoom));\n  viewport.longitude = newCenter[0];\n  viewport.latitude = newCenter[1];\n  viewport.zoom = newZoom;\n  return viewport;\n}\n/* eslint-enable max-statements */\n"],"file":"fly-to-viewport.js"}