{"version":3,"sources":["../../../../src/utils/transition/transition-interpolator.js"],"names":["equals","assert","TransitionInterpolator","currentProps","nextProps","propNames","key","startProps","endProps","start","end","t"],"mappings":";;;AACA,SAAQA,MAAR,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IAEqBC,sB;;;;;;uCAEQ,E;;;;;;AAE3B;;;;;;kCAMcC,Y,EAAmBC,S,EAAyB;AAAA;AAAA;AAAA;;AAAA;AACxD,8BAAmB,KAAKC,SAAL,IAAkB,EAArC,+HAA0C;AAAA,cAA/BC,GAA+B;;AACxC,cAAI,CAACN,MAAM,CAACG,YAAY,CAACG,GAAD,CAAb,EAAoBF,SAAS,CAACE,GAAD,CAA7B,CAAX,EAAgD;AAC9C,mBAAO,KAAP;AACD;AACF;AALuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMxD,aAAO,IAAP;AACD;AAED;;;;;;;;;;oCAOgBC,U,EAAiBC,Q,EAG/B;AACA,aAAO;AAACC,QAAAA,KAAK,EAAEF,UAAR;AAAoBG,QAAAA,GAAG,EAAEF;AAAzB,OAAP;AACD;AAED;;;;;;;;;;qCAOiBD,U,EAAiBC,Q,EAAeG,C,EAAgB;AAC/DV,MAAAA,MAAM,CAAC,KAAD,EAAQ,qCAAR,CAAN;AACD;;;;;;SA1CkBC,sB","sourcesContent":["// @flow\nimport {equals} from '../math-utils';\nimport assert from '../assert';\n\nexport default class TransitionInterpolator {\n\n  propNames: Array<string> = [];\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps: any, nextProps: any): boolean {\n    for (const key of (this.propNames || [])) {\n      if (!equals(currentProps[key], nextProps[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(startProps: any, endProps: any): {\n    start: any,\n    end: any\n  } {\n    return {start: startProps, end: endProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  interpolateProps(startProps: any, endProps: any, t: number): any {\n    assert(false, 'interpolateProps is not implemented');\n  }\n\n}\n"],"file":"transition-interpolator.js"}