{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["createElement","PropTypes","BaseControl","MapState","LINEAR_TRANSITION_PROPS","deprecateWarn","propTypes","Object","assign","className","string","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","defaultProps","NavigationControl","props","_updateViewport","zoom","_context","viewport","bearing","pitch","opts","mapState","viewState","getViewportProps","style","transform","type","label","callback","children","key","title","onClick","ref","_containerRef","_renderButton","_onZoomIn","_onZoomOut","_onResetNorth","_renderCompass"],"mappings":";;;;;;;AAAA,SAAQA,aAAR,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,uBAAR,QAAsC,yBAAtC;AAEA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,WAAW,CAACI,SAA9B,EAAyC;AACzD;AACAG,EAAAA,SAAS,EAAER,SAAS,CAACS,MAFoC;AAGzD;AACA;AACAC,EAAAA,iBAAiB,EAAEV,SAAS,CAACW,IAL4B;AAMzDC,EAAAA,gBAAgB,EAAEZ,SAAS,CAACW,IAN6B;AAOzD;AACAE,EAAAA,WAAW,EAAEb,SAAS,CAACc,IARkC;AASzD;AACAC,EAAAA,QAAQ,EAAEf,SAAS,CAACc;AAVqC,CAAzC,CAAlB;AAaA,IAAME,YAAY,GAAGV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,WAAW,CAACe,YAA9B,EAA4C;AAC/DR,EAAAA,SAAS,EAAE,EADoD;AAE/DE,EAAAA,iBAAiB,EAAE,6BAAM,CAAE,CAFoC;AAG/DE,EAAAA,gBAAgB,EAAE,4BAAM,CAAE,CAHqC;AAI/DC,EAAAA,WAAW,EAAE,IAJkD;AAK/DE,EAAAA,QAAQ,EAAE;AALqD,CAA5C,CAArB;AAQA;;;;;IAIqBE,iB;;;;;AAKnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN,GADiB,CAEjB;;AAFiB,wFAkBP,YAAM;AAChB,YAAKC,eAAL,CAAqB;AAACC,QAAAA,IAAI,EAAE,MAAKC,QAAL,CAAcC,QAAd,CAAuBF,IAAvB,GAA8B;AAArC,OAArB;AACD,KApBkB;;AAAA,yFAsBN,YAAM;AACjB,YAAKD,eAAL,CAAqB;AAACC,QAAAA,IAAI,EAAE,MAAKC,QAAL,CAAcC,QAAd,CAAuBF,IAAvB,GAA8B;AAArC,OAArB;AACD,KAxBkB;;AAAA,4FA0BH,YAAM;AACpB,YAAKD,eAAL,CAAqB;AAACI,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAArB;AACD,KA5BkB;;AAGjBpB,IAAAA,aAAa,CAACc,KAAD,CAAb;AAHiB;AAIlB;;;;oCAEeO,I,EAAM;AAAA,UACbH,QADa,GACD,KAAKD,QADJ,CACbC,QADa;AAEpB,UAAMI,QAAQ,GAAG,IAAIxB,QAAJ,CAAaI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBe,QAAlB,EAA4BG,IAA5B,CAAb,CAAjB;AACA,UAAME,SAAS,GAAGrB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBmB,QAAQ,CAACE,gBAAT,EAAlB,EAA+CzB,uBAA/C,CAAlB,CAHoB,CAKpB;;AACA,WAAKe,KAAL,CAAWR,iBAAX,CAA6B;AAACiB,QAAAA,SAAS,EAATA;AAAD,OAA7B,EANoB,CAQpB;;AACA,WAAKT,KAAL,CAAWN,gBAAX,CAA4Be,SAA5B;AACD;;;qCAcgB;AAAA,UACRJ,OADQ,GACG,KAAKF,QAAL,CAAcC,QADjB,CACRC,OADQ;AAEf,aAAOxB,aAAa,CAAC,MAAD,EAAS;AAC3BS,QAAAA,SAAS,EAAE,6BADgB;AAE3BqB,QAAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,mBAAY,CAACP,OAAb;AAAV;AAFoB,OAAT,CAApB;AAID;;;kCAEaQ,I,EAAMC,K,EAAOC,Q,EAAUC,Q,EAAU;AAC7C,aAAOnC,aAAa,CAAC,QAAD,EAAW;AAC7BoC,QAAAA,GAAG,EAAEJ,IADwB;AAE7BvB,QAAAA,SAAS,6CAAsCuB,IAAtC,CAFoB;AAG7BA,QAAAA,IAAI,EAAE,QAHuB;AAI7BK,QAAAA,KAAK,EAAEJ,KAJsB;AAK7BK,QAAAA,OAAO,EAAEJ,QALoB;AAM7BC,QAAAA,QAAQ,EAARA;AAN6B,OAAX,CAApB;AAQD;;;8BAES;AAAA,wBACmC,KAAKhB,KADxC;AAAA,UACDV,SADC,eACDA,SADC;AAAA,UACUK,WADV,eACUA,WADV;AAAA,UACuBE,QADvB,eACuBA,QADvB;AAGR,aAAOhB,aAAa,CAAC,KAAD,EAAQ;AAC1BS,QAAAA,SAAS,8CAAuCA,SAAvC,CADiB;AAE1B8B,QAAAA,GAAG,EAAE,KAAKC;AAFgB,OAAR,EAGjB,CACDxB,QAAQ,IAAI,KAAKyB,aAAL,CAAmB,SAAnB,EAA8B,SAA9B,EAAyC,KAAKC,SAA9C,CADX,EAED1B,QAAQ,IAAI,KAAKyB,aAAL,CAAmB,UAAnB,EAA+B,UAA/B,EAA2C,KAAKE,UAAhD,CAFX,EAGD7B,WAAW,IACT,KAAK2B,aAAL,CAAmB,SAAnB,EAA8B,aAA9B,EAA6C,KAAKG,aAAlD,EAAiE,KAAKC,cAAL,EAAjE,CAJD,CAHiB,CAApB;AASD;;;;EAlE4C3C,W;;gBAA1BgB,iB,eAEAZ,S;;gBAFAY,iB,kBAGGD,Y;;SAHHC,iB","sourcesContent":["import {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\n\nimport deprecateWarn from '../utils/deprecate-warn';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  onViewStateChange: () => {},\n  onViewportChange: () => {},\n  showCompass: true,\n  showZoom: true\n});\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nexport default class NavigationControl extends BaseControl {\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n  }\n\n  _updateViewport(opts) {\n    const {viewport} = this._context;\n    const mapState = new MapState(Object.assign({}, viewport, opts));\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    // Call new style callback\n    this.props.onViewStateChange({viewState});\n\n    // Call old style callback\n    this.props.onViewportChange(viewState);\n  }\n\n  _onZoomIn = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom + 1});\n  }\n\n  _onZoomOut = () => {\n    this._updateViewport({zoom: this._context.viewport.zoom - 1});\n  }\n\n  _onResetNorth = () => {\n    this._updateViewport({bearing: 0, pitch: 0});\n  }\n\n  _renderCompass() {\n    const {bearing} = this._context.viewport;\n    return createElement('span', {\n      className: 'mapboxgl-ctrl-compass-arrow',\n      style: {transform: `rotate(${-bearing}deg)`}\n    });\n  }\n\n  _renderButton(type, label, callback, children) {\n    return createElement('button', {\n      key: type,\n      className: `mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`,\n      type: 'button',\n      title: label,\n      onClick: callback,\n      children\n    });\n  }\n\n  _render() {\n    const {className, showCompass, showZoom} = this.props;\n\n    return createElement('div', {\n      className: `mapboxgl-ctrl mapboxgl-ctrl-group ${className}`,\n      ref: this._containerRef\n    }, [\n      showZoom && this._renderButton('zoom-in', 'Zoom In', this._onZoomIn),\n      showZoom && this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut),\n      showCompass &&\n        this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())\n    ]);\n  }\n}\n"],"file":"navigation-control.js"}