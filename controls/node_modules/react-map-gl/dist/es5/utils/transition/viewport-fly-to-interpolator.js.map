{"version":3,"sources":["../../../../src/utils/transition/viewport-fly-to-interpolator.js"],"names":["VIEWPORT_TRANSITION_PROPS","REQUIRED_PROPS","LINEARLY_INTERPOLATED_PROPS","ViewportFlyToInterpolator","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","start","end","t","viewport","TransitionInterpolator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAIA,IAAMA,yBAAyB,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,OAA7C,CAAlC;AACA,IAAMC,cAAc,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C,QAA3C,CAAvB;AACA,IAAMC,2BAA2B,GAAG,CAAC,SAAD,EAAY,OAAZ,CAApC;AAEA;;;;;;;;IAOqBC,yB;;;;;;;;;;;;;;;;;kIAEPH,yB;;;;;;oCAEII,U,EAA2BC,Q,EAAyB;AAClE,UAAMC,kBAAkB,GAAG,EAA3B;AACA,UAAMC,gBAAgB,GAAG,EAAzB,CAFkE,CAIlE;;AACA,4BAAkBN,cAAlB,eAAkC;AAA7B,YAAMO,GAAG,GAAIP,cAAJ,IAAT;AACH,YAAMQ,UAAU,GAAGL,UAAU,CAACI,GAAD,CAA7B;AACA,YAAME,QAAQ,GAAGL,QAAQ,CAACG,GAAD,CAAzB;AACA,6BAAO,8BAAQC,UAAR,KAAuB,8BAAQC,QAAR,CAA9B,YAAoDF,GAApD;AACAF,QAAAA,kBAAkB,CAACE,GAAD,CAAlB,GAA0BC,UAA1B;AACAF,QAAAA,gBAAgB,CAACC,GAAD,CAAhB,GAAwB,gDAA0BA,GAA1B,EAA+BC,UAA/B,EAA2CC,QAA3C,CAAxB;AACD;;AAED,8BAAkBR,2BAAlB,gBAA+C;AAA1C,YAAMM,KAAG,GAAIN,2BAAJ,KAAT;;AACH,YAAMO,WAAU,GAAGL,UAAU,CAACI,KAAD,CAAV,IAAmB,CAAtC;;AACA,YAAME,SAAQ,GAAGL,QAAQ,CAACG,KAAD,CAAR,IAAiB,CAAlC;;AACAF,QAAAA,kBAAkB,CAACE,KAAD,CAAlB,GAA0BC,WAA1B;AACAF,QAAAA,gBAAgB,CAACC,KAAD,CAAhB,GAAwB,gDAA0BA,KAA1B,EAA+BC,WAA/B,EAA2CC,SAA3C,CAAxB;AACD;;AAED,aAAO;AACLC,QAAAA,KAAK,EAAEL,kBADF;AAELM,QAAAA,GAAG,EAAEL;AAFA,OAAP;AAID;;;qCAEgBH,U,EAA2BC,Q,EAAyBQ,C,EAAW;AAC9E,UAAMC,QAAQ,GAAG,4CAAcV,UAAd,EAA0BC,QAA1B,EAAoCQ,CAApC,CAAjB,CAD8E,CAG9E;;AACA,8BAAkBX,2BAAlB,gBAA+C;AAA1C,YAAMM,GAAG,GAAIN,2BAAJ,KAAT;AACHY,QAAAA,QAAQ,CAACN,GAAD,CAAR,GAAgB,qBAAKJ,UAAU,CAACI,GAAD,CAAf,EAAsBH,QAAQ,CAACG,GAAD,CAA9B,EAAqCK,CAArC,CAAhB;AACD;;AAED,aAAOC,QAAP;AACD;;;EAvCoDC,+B","sourcesContent":["// @flow\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {flyToViewport} from 'viewport-mercator-project';\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\nimport {lerp} from '../math-utils';\n\nimport type {MapStateProps} from '../map-state';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nconst LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n*/\nexport default class ViewportFlyToInterpolator extends TransitionInterpolator {\n\n  propNames = VIEWPORT_TRANSITION_PROPS;\n\n  initializeProps(startProps: MapStateProps, endProps: MapStateProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    // Check minimum required props\n    for (const key of REQUIRED_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      const startValue = startProps[key] || 0;\n      const endValue = endProps[key] || 0;\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps: MapStateProps, endProps: MapStateProps, t: number) {\n    const viewport = flyToViewport(startProps, endProps, t);\n\n    // Linearly interpolate 'bearing' and 'pitch' if exist.\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    return viewport;\n  }\n\n}\n"],"file":"viewport-fly-to-interpolator.js"}