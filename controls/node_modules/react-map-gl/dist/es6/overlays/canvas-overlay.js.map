{"version":3,"sources":["../../../src/overlays/canvas-overlay.js"],"names":["createElement","PropTypes","BaseControl","window","propTypes","Object","assign","redraw","func","isRequired","defaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","CanvasOverlay","constructor","props","ctx","_ctx","pixelRatio","devicePixelRatio","save","scale","_context","viewport","isDragging","width","height","project","bind","unproject","restore","componentDidMount","_canvas","_containerRef","current","getContext","_redraw","_render","ref","style","position","left","top","displayName"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,aAAR,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,WAAW,CAACE,SAA9B,EAAyC;AACzDG,EAAAA,MAAM,EAAEN,SAAS,CAACO,IAAV,CAAeC;AADkC,CAAzC,CAAlB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,kBAAkB,EAAE;AAJD,CAArB;AAOA,eAAe,MAAMC,aAAN,SAA4Bb,WAA5B,CAAwC;AACrDc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAUT,MAAM;AACd,YAAMC,GAAG,GAAG,KAAKC,IAAjB;;AACA,UAAI,CAACD,GAAL,EAAU;AACR;AACD;;AAED,YAAME,UAAU,GAAGjB,MAAM,CAACkB,gBAAP,IAA2B,CAA9C;AACAH,MAAAA,GAAG,CAACI,IAAJ;AACAJ,MAAAA,GAAG,CAACK,KAAJ,CAAUH,UAAV,EAAsBA,UAAtB;AARc,6BAUiB,KAAKI,QAVtB;AAAA,YAUPC,QAVO,kBAUPA,QAVO;AAAA,YAUGC,UAVH,kBAUGA,UAVH;AAWd,WAAKT,KAAL,CAAWV,MAAX,CAAkB;AAChBoB,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KADA;AAEhBC,QAAAA,MAAM,EAAEH,QAAQ,CAACG,MAFD;AAGhBV,QAAAA,GAHgB;AAIhBQ,QAAAA,UAJgB;AAKhBG,QAAAA,OAAO,EAAEJ,QAAQ,CAACI,OAAT,CAAiBC,IAAjB,CAAsBL,QAAtB,CALO;AAMhBM,QAAAA,SAAS,EAAEN,QAAQ,CAACM,SAAT,CAAmBD,IAAnB,CAAwBL,QAAxB;AANK,OAAlB;AASAP,MAAAA,GAAG,CAACc,OAAJ;AACD,KA/BkB;AAElB;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAe,KAAKC,aAAL,CAAmBC,OAAlC;AACA,SAAKjB,IAAL,GAAY,KAAKe,OAAL,CAAaG,UAAb,CAAwB,IAAxB,CAAZ;;AACA,SAAKC,OAAL;AACD;;AAyBDC,EAAAA,OAAO,GAAG;AACR,UAAMnB,UAAU,GAAGjB,MAAM,CAACkB,gBAAP,IAA2B,CAA9C;AADQ,kCAE4B,KAAKG,QAFjC,CAEDC,QAFC;AAAA,UAEUE,KAFV,yBAEUA,KAFV;AAAA,UAEiBC,MAFjB,yBAEiBA,MAFjB;;AAGR,SAAKU,OAAL;;AAEA,WACEtC,aAAa,CAAC,QAAD,EAAW;AACtBwC,MAAAA,GAAG,EAAE,KAAKL,aADY;AAEtBR,MAAAA,KAAK,EAAEA,KAAK,GAAGP,UAFO;AAGtBQ,MAAAA,MAAM,EAAEA,MAAM,GAAGR,UAHK;AAItBqB,MAAAA,KAAK,EAAE;AACLd,QAAAA,KAAK,EAAG,GAAEA,KAAM,IADX;AAELC,QAAAA,MAAM,EAAG,GAAEA,MAAO,IAFb;AAGLc,QAAAA,QAAQ,EAAE,UAHL;AAILC,QAAAA,IAAI,EAAE,CAJD;AAKLC,QAAAA,GAAG,EAAE;AALA;AAJe,KAAX,CADf;AAcD;;AArDoD;AAwDvD7B,aAAa,CAAC8B,WAAd,GAA4B,eAA5B;AACA9B,aAAa,CAACX,SAAd,GAA0BA,SAA1B;AACAW,aAAa,CAACL,YAAd,GAA6BA,YAA7B","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from '../components/base-control';\nimport {window} from '../utils/globals';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  redraw: PropTypes.func.isRequired\n});\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false\n};\n\nexport default class CanvasOverlay extends BaseControl {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this._canvas = this._containerRef.current;\n    this._ctx = this._canvas.getContext('2d');\n    this._redraw();\n  }\n\n  _redraw = () => {\n    const ctx = this._ctx;\n    if (!ctx) {\n      return;\n    }\n\n    const pixelRatio = window.devicePixelRatio || 1;\n    ctx.save();\n    ctx.scale(pixelRatio, pixelRatio);\n\n    const {viewport, isDragging} = this._context;\n    this.props.redraw({\n      width: viewport.width,\n      height: viewport.height,\n      ctx,\n      isDragging,\n      project: viewport.project.bind(viewport),\n      unproject: viewport.unproject.bind(viewport)\n    });\n\n    ctx.restore();\n  }\n\n  _render() {\n    const pixelRatio = window.devicePixelRatio || 1;\n    const {viewport: {width, height}} = this._context;\n    this._redraw();\n\n    return (\n      createElement('canvas', {\n        ref: this._containerRef,\n        width: width * pixelRatio,\n        height: height * pixelRatio,\n        style: {\n          width: `${width}px`,\n          height: `${height}px`,\n          position: 'absolute',\n          left: 0,\n          top: 0\n        }\n      })\n    );\n  }\n}\n\nCanvasOverlay.displayName = 'CanvasOverlay';\nCanvasOverlay.propTypes = propTypes;\nCanvasOverlay.defaultProps = defaultProps;\n"],"file":"canvas-overlay.js"}