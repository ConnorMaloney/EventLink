{"version":3,"sources":["../../../src/components/draggable-control.js"],"names":["PropTypes","BaseControl","propTypes","Object","assign","draggable","bool","onDrag","func","onDragEnd","onDragStart","offsetLeft","number","offsetTop","defaultProps","DraggableControl","constructor","props","event","captureDrag","stopPropagation","dragPos","_getDragEventPosition","dragOffset","_getDragEventOffset","setState","_setupDragEvents","lngLat","_getDragLngLat","state","_removeDragEvents","componentWillUnmount","eventManager","_context","_dragEvents","panmove","_onDrag","panend","_onDragEnd","pancancel","_onDragCancel","on","off","offsetCenter","x","y","center","rect","_containerRef","current","getBoundingClientRect","left","top","_getDraggedPosition","viewport","unproject"],"mappings":";;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAIA,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,WAAW,CAACC,SAA9B,EAAyC;AACzDG,EAAAA,SAAS,EAAEL,SAAS,CAACM,IADoC;AAEzDC,EAAAA,MAAM,EAAEP,SAAS,CAACQ,IAFuC;AAGzDC,EAAAA,SAAS,EAAET,SAAS,CAACQ,IAHoC;AAIzDE,EAAAA,WAAW,EAAEV,SAAS,CAACQ,IAJkC;AAKzD;AACAG,EAAAA,UAAU,EAAEX,SAAS,CAACY,MANmC;AAOzD;AACAC,EAAAA,SAAS,EAAEb,SAAS,CAACY;AARoC,CAAzC,CAAlB;AAWA,MAAME,YAAY,GAAGX,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,WAAW,CAACa,YAA9B,EAA4C;AAC/DT,EAAAA,SAAS,EAAE;AADoD,CAA5C,CAArB;AAOA,eAAe,MAAMU,gBAAN,SAA+Bd,WAA/B,CAA2C;AAKxDe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,0CAmEHC,KAAD,IAAyB;AAAA,0BACL,KAAKD,KADA;AAAA,YAC/BZ,SAD+B,eAC/BA,SAD+B;AAAA,YACpBc,WADoB,eACpBA,WADoB;;AAEtC,UAAId,SAAS,IAAIc,WAAjB,EAA8B;AAC5BD,QAAAA,KAAK,CAACE,eAAN;AACD;;AACD,UAAI,CAACf,SAAL,EAAgB;AACd;AACD;;AAED,YAAMgB,OAAO,GAAG,KAAKC,qBAAL,CAA2BJ,KAA3B,CAAhB;;AACA,YAAMK,UAAU,GAAG,KAAKC,mBAAL,CAAyBN,KAAzB,CAAnB;;AACA,WAAKO,QAAL,CAAc;AAACJ,QAAAA,OAAD;AAAUE,QAAAA;AAAV,OAAd;;AACA,WAAKG,gBAAL;;AAEA,UAAI,KAAKT,KAAL,CAAWP,WAAf,EAA4B;AAC1BQ,QAAAA,KAAK,CAACS,MAAN,GAAe,KAAKC,cAAL,CAAoBP,OAApB,EAA6BE,UAA7B,CAAf;AACA,aAAKN,KAAL,CAAWP,WAAX,CAAuBQ,KAAvB;AACD;AACF,KArFkB;;AAAA,qCAuFRA,KAAD,IAAyB;AACjCA,MAAAA,KAAK,CAACE,eAAN;;AAEA,YAAMC,OAAO,GAAG,KAAKC,qBAAL,CAA2BJ,KAA3B,CAAhB;;AACA,WAAKO,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;;AAEA,UAAI,KAAKJ,KAAL,CAAWV,MAAf,EAAuB;AACrBW,QAAAA,KAAK,CAACS,MAAN,GAAe,KAAKC,cAAL,CAAoBP,OAApB,EAA6B,KAAKQ,KAAL,CAAWN,UAAxC,CAAf;AACA,aAAKN,KAAL,CAAWV,MAAX,CAAkBW,KAAlB;AACD;AACF,KAjGkB;;AAAA,wCAmGLA,KAAD,IAAyB;AAAA,0BACN,KAAKW,KADC;AAAA,YAC7BR,OAD6B,eAC7BA,OAD6B;AAAA,YACpBE,UADoB,eACpBA,UADoB;AAGpCL,MAAAA,KAAK,CAACE,eAAN;AACA,WAAKK,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,UAAU,EAAE;AAA5B,OAAd;;AACA,WAAKO,iBAAL;;AAEA,UAAI,KAAKb,KAAL,CAAWR,SAAf,EAA0B;AACxBS,QAAAA,KAAK,CAACS,MAAN,GAAe,KAAKC,cAAL,CAAoBP,OAApB,EAA6BE,UAA7B,CAAf;AACA,aAAKN,KAAL,CAAWR,SAAX,CAAqBS,KAArB;AACD;AACF,KA9GkB;;AAAA,2CAgHFA,KAAD,IAAyB;AACvCA,MAAAA,KAAK,CAACE,eAAN;AACA,WAAKK,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,UAAU,EAAE;AAA5B,OAAd;;AACA,WAAKO,iBAAL;AACD,KApHkB;;AAEjB,SAAKD,KAAL,GAAa;AACXR,MAAAA,OAAO,EAAE,IADE;AAEXE,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrB,UAAMA,oBAAN;;AACA,SAAKD,iBAAL;AACD;;AAEDJ,EAAAA,gBAAgB,GAAG;AAAA,UACVM,YADU,GACM,KAAKC,QADX,CACVD,YADU;;AAEjB,QAAI,CAACA,YAAL,EAAmB;AACjB;AACD,KAJgB,CAMjB;AACA;;;AACA,SAAKE,WAAL,GAAmB;AACjBC,MAAAA,OAAO,EAAE,KAAKC,OADG;AAEjBC,MAAAA,MAAM,EAAE,KAAKC,UAFI;AAGjBC,MAAAA,SAAS,EAAE,KAAKC;AAHC,KAAnB;AAKAR,IAAAA,YAAY,CAACS,EAAb,CAAgB,KAAKP,WAArB;AACD;;AAEDJ,EAAAA,iBAAiB,GAAG;AAAA,UACXE,YADW,GACK,KAAKC,QADV,CACXD,YADW;;AAElB,QAAI,CAACA,YAAD,IAAiB,CAAC,KAAKE,WAA3B,EAAwC;AACtC;AACD;;AACDF,IAAAA,YAAY,CAACU,GAAb,CAAiB,KAAKR,WAAtB;AACA,SAAKA,WAAL,GAAmB,IAAnB;AACD;;AAEDZ,EAAAA,qBAAqB,CAACJ,KAAD,EAAkC;AAAA,gCACtBA,KADsB,CAC9CyB,YAD8C;AAAA,UAC/BC,CAD+B,uBAC/BA,CAD+B;AAAA,UAC5BC,CAD4B,uBAC5BA,CAD4B;AAErD,WAAO,CAACD,CAAD,EAAIC,CAAJ,CAAP;AACD;AAED;;;;;;AAIArB,EAAAA,mBAAmB,CAACN,KAAD,EAA8B;AAAA,0BACtBA,KADsB,CACxC4B,MADwC;AAAA,UAC/BF,CAD+B,iBAC/BA,CAD+B;AAAA,UAC5BC,CAD4B,iBAC5BA,CAD4B;;AAE/C,UAAME,IAAI,GAAG,KAAKC,aAAL,CAAmBC,OAAnB,CAA2BC,qBAA3B,EAAb;;AACA,WAAO,CAACH,IAAI,CAACI,IAAL,GAAYP,CAAb,EAAgBG,IAAI,CAACK,GAAL,GAAWP,CAA3B,CAAP;AACD;;AAEDQ,EAAAA,mBAAmB,CAAChC,OAAD,EAAsBE,UAAtB,EAAsD;AACvE,WAAO,CACLF,OAAO,CAAC,CAAD,CAAP,GAAaE,UAAU,CAAC,CAAD,CADlB,EAELF,OAAO,CAAC,CAAD,CAAP,GAAaE,UAAU,CAAC,CAAD,CAFlB,CAAP;AAID;;AAEDK,EAAAA,cAAc,CAACP,OAAD,EAAsBE,UAAtB,EAAsD;AAAA,yBAClC,KAAKN,KAD6B;AAAA,UAC3DN,UAD2D,gBAC3DA,UAD2D;AAAA,UAC/CE,SAD+C,gBAC/CA,SAD+C;;AAAA,kCAEnD,KAAKwC,mBAAL,CAAyBhC,OAAzB,EAAkCE,UAAlC,CAFmD;AAAA;AAAA,UAE3DqB,CAF2D;AAAA,UAExDC,CAFwD,8BAGlE;;;AACA,WAAO,KAAKZ,QAAL,CAAcqB,QAAd,CAAuBC,SAAvB,CAAiC,CAACX,CAAC,GAAGjC,UAAL,EAAiBkC,CAAC,GAAGhC,SAArB,CAAjC,CAAP;AACD;;AAtEuD;;gBAArCE,gB,eAEAb,S;;gBAFAa,gB,kBAGGD,Y","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport type {MjolnirEvent} from 'mjolnir.js';\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  draggable: PropTypes.bool,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  // Offset from the left\n  offsetLeft: PropTypes.number,\n  // Offset from the top\n  offsetTop: PropTypes.number\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  draggable: false\n});\n\nexport type Coordinate = [number, number];\nexport type Offset = [number, number];\n\nexport default class DraggableControl extends BaseControl {\n\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragPos: null,\n      dragOffset: null\n    };\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this._removeDragEvents();\n  }\n\n  _setupDragEvents() {\n    const {eventManager} = this._context;\n    if (!eventManager) {\n      return;\n    }\n\n    // panstart is already attached by parent class BaseControl,\n    // here we just add listeners for subsequent drag events\n    this._dragEvents = {\n      panmove: this._onDrag,\n      panend: this._onDragEnd,\n      pancancel: this._onDragCancel\n    };\n    eventManager.on(this._dragEvents);\n  }\n\n  _removeDragEvents() {\n    const {eventManager} = this._context;\n    if (!eventManager || !this._dragEvents) {\n      return;\n    }\n    eventManager.off(this._dragEvents);\n    this._dragEvents = null;\n  }\n\n  _getDragEventPosition(event: MjolnirEvent): Coordinate {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  /**\n   * Returns offset of top-left of marker from drag start event\n   * (used for positioning marker relative to next mouse coordinates)\n   */\n  _getDragEventOffset(event: MjolnirEvent): Offset {\n    const {center: {x, y}} = event;\n    const rect = this._containerRef.current.getBoundingClientRect();\n    return [rect.left - x, rect.top - y];\n  }\n\n  _getDraggedPosition(dragPos: Coordinate, dragOffset: Offset): Coordinate {\n    return [\n      dragPos[0] + dragOffset[0],\n      dragPos[1] + dragOffset[1]\n    ];\n  }\n\n  _getDragLngLat(dragPos: Coordinate, dragOffset: Offset): Coordinate {\n    const {offsetLeft, offsetTop} = this.props;\n    const [x, y] = this._getDraggedPosition(dragPos, dragOffset);\n    // Unproject x/y value while respecting offset coordinates\n    return this._context.viewport.unproject([x - offsetLeft, y - offsetTop]);\n  }\n\n  _onDragStart = (event: MjolnirEvent) => {\n    const {draggable, captureDrag} = this.props;\n    if (draggable || captureDrag) {\n      event.stopPropagation();\n    }\n    if (!draggable) {\n      return;\n    }\n\n    const dragPos = this._getDragEventPosition(event);\n    const dragOffset = this._getDragEventOffset(event);\n    this.setState({dragPos, dragOffset});\n    this._setupDragEvents();\n\n    if (this.props.onDragStart) {\n      event.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      this.props.onDragStart(event);\n    }\n  }\n\n  _onDrag = (event: MjolnirEvent) => {\n    event.stopPropagation();\n\n    const dragPos = this._getDragEventPosition(event);\n    this.setState({dragPos});\n\n    if (this.props.onDrag) {\n      event.lngLat = this._getDragLngLat(dragPos, this.state.dragOffset);\n      this.props.onDrag(event);\n    }\n  }\n\n  _onDragEnd = (event: MjolnirEvent) => {\n    const {dragPos, dragOffset} = this.state;\n\n    event.stopPropagation();\n    this.setState({dragPos: null, dragOffset: null});\n    this._removeDragEvents();\n\n    if (this.props.onDragEnd) {\n      event.lngLat = this._getDragLngLat(dragPos, dragOffset);\n      this.props.onDragEnd(event);\n    }\n  }\n\n  _onDragCancel = (event: MjolnirEvent) => {\n    event.stopPropagation();\n    this.setState({dragPos: null, dragOffset: null});\n    this._removeDragEvents();\n  }\n}\n"],"file":"draggable-control.js"}